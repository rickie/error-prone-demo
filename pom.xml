<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tech.picnic.demo</groupId>
    <artifactId>error-prone-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>error-prone-demo</name>
    <url>https://error-prone.picnic.tech</url>

    <properties>
        <!-- Property using which additional Error Prone flags can be
        specified. Used by the `patch` profile. -->
        <error-prone.patch-args />
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.error-prone>2.22.0-picnic-1</version.error-prone>
        <version.error-prone-support>0.14.0</version.error-prone-support>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>31.1-jre</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.2</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.5</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <createBackupFile>false</createBackupFile>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <expandEmptyElements>false</expandEmptyElements>
                        <nrOfIndentSpace>4</nrOfIndentSpace>
                        <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                        <sortDependencies>groupId,artifactId</sortDependencies>
                        <sortDependencyExclusions>groupId,artifactId</sortDependencyExclusions>
                        <sortModules>true</sortModules>
                        <sortPlugins>groupId,artifactId</sortPlugins>
                        <sortProperties>true</sortProperties>
                        <verifyFail>warn</verifyFail>
                    </configuration>
                    <executions>
                        <execution>
                            <id>verify-pom-sorting</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify.fmt</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>2.21.1</version>
                    <configuration>
                        <forkMode>never</forkMode>
                        <failOnError>false</failOnError>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check-source-format</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>error-prone</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <annotationProcessorPaths combine.children="append">
                                <!-- Picnic's Error Prone fork. -->
                                <path>
                                    <groupId>com.github.PicnicSupermarket.error-prone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>${version.error-prone}</version>
                                </path>
                                <!-- Error Prone Support's additional bug checkers. -->
                                <path>
                                    <groupId>tech.picnic.error-prone-support</groupId>
                                    <artifactId>error-prone-contrib</artifactId>
                                    <version>${version.error-prone-support}</version>
                                </path>
                                <!-- Error Prone Support's Refaster templates. -->
                                <path>
                                    <groupId>tech.picnic.error-prone-support</groupId>
                                    <artifactId>refaster-runner</artifactId>
                                    <version>${version.error-prone-support}</version>
                                </path>
                            </annotationProcessorPaths>
                            <compilerArgs>
                                <!-- Enable and configure Error Prone. -->
                                <arg>
                                    -Xplugin:ErrorProne
                                    <!-- We use a separate Maven profile to
                                    raise all warnings as errors. This way one
                                    can optionally collect all warnings without
                                    failing the build on the first error
                                    encountered. -->
                                    -XepAllErrorsAsWarnings
                                    <!-- -XepAllSuggestionsAsWarnings-->
                                    <!-- We want to enable almost all Error
                                    Prone bug pattern checkers, so we enable
                                    all and then selectively deactivate some. -->
                                    -XepAllDisabledChecksAsWarnings
                                    <!-- Some generated classes violate Error
                                    Prone bug patterns. We cannot in all cases
                                    avoid that, so we simply tell Error Prone
                                    not to warn about generated code. -->
                                    -XepDisableWarningsInGeneratedCode
                                    -XepExcludedPaths:\Q${project.build.directory}${file.separator}\E.*
                                    <!-- We don't target Android. -->
                                    -Xep:AndroidJdkLibsChecker:OFF
                                    <!-- We don't target JDK 7. -->
                                    -Xep:Java7ApiChecker:OFF
                                    <!-- We don't target JDK 8. -->
                                    -Xep:Java8ApiChecker:OFF
                                    <!-- We generally discourage `var` use. -->
                                    -Xep:Varifier:OFF
                                    <!-- Disabled for demo purposes. -->
                                    -Xep:SystemOut:OFF
                                    <!-- Refaster name pattern example:
                                    -XepOpt:Refaster:NamePattern=^(?!(Immutable.*Rules)).*
                                    -->
                                    <!--
                                    START Error Prone Support configuration.
                                    -->
                                    <!-- XXX: Enable once sufficiently
                                    configurable. -->
                                    -Xep:LexicographicalAnnotationListing:OFF
                                    <!-- XXX: Enable once false positives no longer
                                    have a major performance impact. -->
                                    -Xep:MethodReferenceUsage:OFF
                                    <!-- XXX: Disabled as it is not a clear
                                    improvement. -->
                                    -Xep:StringJoin:OFF
                                    -XepOpt:ErrorProneSupport:IgnoreClasspathCompat=true
                                    <!--
                                    END Error Prone Support configuration.
                                    -->
                                    <!-- Append additional custom arguments. -->
                                    ${error-prone.patch-args}
                                </arg>
                                <arg>-XDcompilePolicy=simple</arg>
                            </compilerArgs>
                            <showWarnings>true</showWarnings>
                            <!-- <failOnWarning>true</failOnWarning> -->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <!-- The code is built against a Picnic-managed fork of Error
            Prone. This fork is hosted by Jitpack.io. See
            https://jitpack.io/#PicnicSupermarket/error-prone. -->
            <repositories>
                <repository>
                    <id>jitpack.io</id>
                    <url>https://jitpack.io</url>
                </repository>
            </repositories>
        </profile>
        <profile>
            <!-- If combined with the `error-prone` profile above, this profile
            configures Error Prone to try and automatically fix (rather than
            merely flag) bug pattern violations in the source code. -->
            <id>patch</id>
            <properties>
                <error-prone.patch-args>-XepPatchChecks:${error-prone.patch-checks} -XepPatchLocation:IN_PLACE</error-prone.patch-args>
                <!-- One can override this value to specify which checks should be patched. -->
                <error-prone.patch-checks />
            </properties>
        </profile>
    </profiles>
</project>
